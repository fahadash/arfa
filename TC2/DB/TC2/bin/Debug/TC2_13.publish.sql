/*
Deployment script for TC2

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TC2"
:setvar DefaultFilePrefix "TC2"
:setvar DefaultDataPath "c:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "c:\Program Files\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Table].[TableName] on table [dbo].[Table] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Table])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping DF__Table__Created__1ED998B2...';


GO
ALTER TABLE [dbo].[Table] DROP CONSTRAINT [DF__Table__Created__1ED998B2];


GO
PRINT N'Dropping DF__Table__Suspended__34C8D9D1...';


GO
ALTER TABLE [dbo].[Table] DROP CONSTRAINT [DF__Table__Suspended__34C8D9D1];


GO
PRINT N'Dropping FK_GameResult_ToTable...';


GO
ALTER TABLE [dbo].[GameResult] DROP CONSTRAINT [FK_GameResult_ToTable];


GO
PRINT N'Dropping FK_GameScore_Table...';


GO
ALTER TABLE [dbo].[GameScore] DROP CONSTRAINT [FK_GameScore_Table];


GO
PRINT N'Dropping FK_User_Table...';


GO
ALTER TABLE [dbo].[Table] DROP CONSTRAINT [FK_User_Table];


GO
PRINT N'Dropping FK_TableState_ToTable...';


GO
ALTER TABLE [dbo].[TableState] DROP CONSTRAINT [FK_TableState_ToTable];


GO
PRINT N'Dropping FK_TableUser_ToTable...';


GO
ALTER TABLE [dbo].[TableUser] DROP CONSTRAINT [FK_TableUser_ToTable];


GO
PRINT N'Dropping FK_UserTableInventory_Table...';


GO
ALTER TABLE [dbo].[UserTableInventory] DROP CONSTRAINT [FK_UserTableInventory_Table];


GO
PRINT N'Starting rebuilding table [dbo].[Table]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Table] (
    [TableId]     INT           NOT NULL,
    [TableName]   VARCHAR (100) NOT NULL,
    [OwnerUserId] INT           NOT NULL,
    [Created]     DATETIME      DEFAULT GETDATE() NOT NULL,
    [Suspended]   BIT           DEFAULT 0 NOT NULL,
    [Timestamp]   VARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([TableId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Table])
    BEGIN
        
        INSERT INTO [dbo].[tmp_ms_xx_Table] ([TableId], [OwnerUserId], [Created], [Suspended], [Timestamp])
        SELECT   [TableId],
                 [OwnerUserId],
                 [Created],
                 [Suspended],
                 [Timestamp]
        FROM     [dbo].[Table]
        ORDER BY [TableId] ASC;
        
    END

DROP TABLE [dbo].[Table];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Table]', N'Table';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating FK_GameResult_ToTable...';


GO
ALTER TABLE [dbo].[GameResult] WITH NOCHECK
    ADD CONSTRAINT [FK_GameResult_ToTable] FOREIGN KEY ([TableId]) REFERENCES [dbo].[Table] ([TableId]);


GO
PRINT N'Creating FK_GameScore_Table...';


GO
ALTER TABLE [dbo].[GameScore] WITH NOCHECK
    ADD CONSTRAINT [FK_GameScore_Table] FOREIGN KEY ([TableId]) REFERENCES [dbo].[Table] ([TableId]);


GO
PRINT N'Creating FK_User_Table...';


GO
ALTER TABLE [dbo].[Table] WITH NOCHECK
    ADD CONSTRAINT [FK_User_Table] FOREIGN KEY ([OwnerUserId]) REFERENCES [dbo].[User] ([UserId]);


GO
PRINT N'Creating FK_TableState_ToTable...';


GO
ALTER TABLE [dbo].[TableState] WITH NOCHECK
    ADD CONSTRAINT [FK_TableState_ToTable] FOREIGN KEY ([TableId]) REFERENCES [dbo].[Table] ([TableId]);


GO
PRINT N'Creating FK_TableUser_ToTable...';


GO
ALTER TABLE [dbo].[TableUser] WITH NOCHECK
    ADD CONSTRAINT [FK_TableUser_ToTable] FOREIGN KEY ([TableId]) REFERENCES [dbo].[Table] ([TableId]);


GO
PRINT N'Creating FK_UserTableInventory_Table...';


GO
ALTER TABLE [dbo].[UserTableInventory] WITH NOCHECK
    ADD CONSTRAINT [FK_UserTableInventory_Table] FOREIGN KEY ([TableId]) REFERENCES [dbo].[Table] ([TableId]);


GO
PRINT N'Creating [dbo].[usp_ListJoinableTables]...';


GO
CREATE PROCEDURE [dbo].[usp_ListJoinableTables]
	@LoginToken UNIQUEIDENTIFIER
AS
	DECLARE @UserId INT
	DECLARE @ErrorCode VARCHAR(100), @Message VARCHAR(200)

	SET @UserId = dbo.fn_GetUserIdByToken(@LoginToken)
	
	IF (@UserId IS NULL)
	BEGIN
		SET @ErrorCode = 'INVALIDLOGINTOKEN'
		SET @Message = 'Invalid login token, make sure yu are logged in'
	END
	ELSE
	BEGIN
		SET @ErrorCode = 'SUCCESS'
		SET @Message = ''
	END

	if @ErrorCode <> 'SUCCESS'
	BEGIN
		RAISERROR (@ErrorCode, 10, 0);
	END

	SELECT TableId, TableName, 4 - (
		SELECT COUNT(*) FROM TableUser WHERE TableUser.TableId = [Table].TableId) SlotsAvailable, UserId, Username
	FROM [Table]
	INNER JOIN [User] ON [Table].OwnerUserId = [User].UserId

	WHERE OwnerUserId <> @UserId AND (SELECT COUNT(*) FROM TableUser WHERE TableUser.TableId = [Table].TableId) < 4 AND Suspended = 0

RETURN 0
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
DELETE FROM Card
GO

SET IDENTITY_INSERT [dbo].[Card] ON 

GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (2, N'Ace of Spades', N'AS')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (3, N'Ace of Clubs', N'AC')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (4, N'Ace of Hearts', N'AH')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (5, N'Ace of Diamonds', N'AD')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (6, N'King of Spades', N'KS')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (7, N'King of Clubs', N'KC')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (8, N'King of Hearts', N'KH')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (9, N'King of Diamonds', N'KD')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (10, N'Queen of Spades', N'QS')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (11, N'Queen of Clubs', N'QC')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (12, N'Queen of Hearts', N'QH')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (13, N'Queen of Diamonds', N'QD')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (14, N'Jack of Spades', N'JS')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (15, N'Jack of Clubs', N'JC')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (16, N'Jack of Hearts', N'JH')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (17, N'Jack of Diamonds', N'JD')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (18, N'10 of Spades', N'10S')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (19, N'10 of Clubs', N'10C')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (20, N'10 of Hearts', N'10H')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (21, N'10 of Diamonds', N'10D')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (22, N'9 of Spades', N'9S')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (23, N'9 of Clubs', N'9C')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (24, N'9 of Hearts', N'9H')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (25, N'9 of Diamonds', N'9D')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (26, N'8 of Spades', N'8S')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (27, N'8 of Clubs', N'8C')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (28, N'8 of Hearts', N'8H')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (29, N'8 of Diamonds', N'8D')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (30, N'7 of Spades', N'7S')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (31, N'7 of Clubs', N'7C')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (32, N'7 of Hearts', N'7H')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (33, N'7 of Diamonds', N'7D')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (34, N'6 of Spades', N'6S')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (35, N'6 of Clubs', N'6C')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (36, N'6 of Hearts', N'6H')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (37, N'6 of Diamonds', N'6D')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (38, N'5 of Spades', N'5S')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (39, N'5 of Clubs', N'5C')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (40, N'5 of Hearts', N'5H')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (41, N'5 of Diamonds', N'5D')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (42, N'4 of Spades', N'4S')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (43, N'4 of Clubs', N'4C')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (44, N'4 of Hearts', N'4H')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (45, N'4 of Diamonds', N'4D')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (46, N'3 of Spades', N'3S')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (47, N'3 of Clubs', N'3C')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (48, N'3 of Hearts', N'3H')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (49, N'3 of Diamonds', N'3D')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (50, N'2 of Spades', N'2S')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (51, N'2 of Clubs', N'2C')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (52, N'2 of Hearts', N'2H')
GO
INSERT [dbo].[Card] ([CardId], [CardName], [CardAlias]) VALUES (53, N'2 of Diamonds', N'2D')
GO
SET IDENTITY_INSERT [dbo].[Card] OFF
GO

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[GameResult] WITH CHECK CHECK CONSTRAINT [FK_GameResult_ToTable];

ALTER TABLE [dbo].[GameScore] WITH CHECK CHECK CONSTRAINT [FK_GameScore_Table];

ALTER TABLE [dbo].[Table] WITH CHECK CHECK CONSTRAINT [FK_User_Table];

ALTER TABLE [dbo].[TableState] WITH CHECK CHECK CONSTRAINT [FK_TableState_ToTable];

ALTER TABLE [dbo].[TableUser] WITH CHECK CHECK CONSTRAINT [FK_TableUser_ToTable];

ALTER TABLE [dbo].[UserTableInventory] WITH CHECK CHECK CONSTRAINT [FK_UserTableInventory_Table];


GO
PRINT N'Update complete.';


GO
