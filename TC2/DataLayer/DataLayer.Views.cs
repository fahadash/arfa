//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets74E09C9D05B58EEF43431D39449837BB0167A113EA144866F8DC4A2FEAFC7C52))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets74E09C9D05B58EEF43431D39449837BB0167A113EA144866F8DC4A2FEAFC7C52 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets74E09C9D05B58EEF43431D39449837BB0167A113EA144866F8DC4A2FEAFC7C52()
        {
            this.EdmEntityContainerName = "GameConn";
            this.StoreEntityContainerName = "DataLayerStoreContainer";
            this.HashOverMappingClosure = "d677a4bd714cae473c7035799460054d478f80a4f52aa20c105e90d5fd8deac7";
            this.HashOverAllExtentViews = "9970e1816678d469cdb4fdbd95d728767c6fac7f174c8eff3a3d809e7025acee";
            this.ViewCount = 14;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for DataLayerStoreContainer.Card
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataLayerStoreContainer.Card", @"
    SELECT VALUE -- Constructing Card
        [DataLayer.Store.Card](T1.Card_CardId, T1.Card_Symbol, T1.Card_Letter, T1.Card_Worth, T1.Card_Image)
    FROM (
        SELECT 
            T.CardId AS Card_CardId, 
            T.Symbol AS Card_Symbol, 
            T.Letter AS Card_Letter, 
            T.Worth AS Card_Worth, 
            T.Image AS Card_Image, 
            True AS _from0
        FROM GameConn.Card AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataLayerStoreContainer.Game
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataLayerStoreContainer.Game", @"
    SELECT VALUE -- Constructing Game
        [DataLayer.Store.Game](T1.Game_GameId, T1.Game_Description, T1.Game_DateCreated)
    FROM (
        SELECT 
            T.GameId AS Game_GameId, 
            T.Description AS Game_Description, 
            T.DateCreated AS Game_DateCreated, 
            True AS _from0
        FROM GameConn.Game AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataLayerStoreContainer.GameState
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataLayerStoreContainer.GameState", @"
    SELECT VALUE -- Constructing GameState
        [DataLayer.Store.GameState](T1.GameState_PlayerId, T1.GameState_GameId, T1.GameState_CardId, T1.GameState_SequenceNumber)
    FROM (
        SELECT 
            T.PlayerId AS GameState_PlayerId, 
            T.GameId AS GameState_GameId, 
            T.CardId AS GameState_CardId, 
            T.SequenceNumber AS GameState_SequenceNumber, 
            True AS _from0
        FROM GameConn.GameState AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataLayerStoreContainer.Player
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataLayerStoreContainer.Player", @"
    SELECT VALUE -- Constructing Player
        [DataLayer.Store.Player](T1.Player_PlayerId, T1.Player_UserId, T1.Player_GameId)
    FROM (
        SELECT 
            T.PlayerId AS Player_PlayerId, 
            T.UserId AS Player_UserId, 
            T.GameId AS Player_GameId, 
            True AS _from0
        FROM GameConn.Player AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataLayerStoreContainer.Registration
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataLayerStoreContainer.Registration", @"
    SELECT VALUE -- Constructing Registration
        [DataLayer.Store.Registration](T1.Registration_UserId, T1.Registration_Username, T1.Registration_Password, T1.Registration_Firstname, T1.Registration_Lastname, T1.Registration_Age, T1.Registration_Email)
    FROM (
        SELECT 
            T.UserId AS Registration_UserId, 
            T.Username AS Registration_Username, 
            T.Password AS Registration_Password, 
            T.Firstname AS Registration_Firstname, 
            T.Lastname AS Registration_Lastname, 
            T.Age AS Registration_Age, 
            T.Email AS Registration_Email, 
            True AS _from0
        FROM GameConn.Registration AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataLayerStoreContainer.Score
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataLayerStoreContainer.Score", @"
    SELECT VALUE -- Constructing Score
        [DataLayer.Store.Score](T1.Score_PlayerId, T1.Score_GameId, T1.Score_Score)
    FROM (
        SELECT 
            T.PlayerId AS Score_PlayerId, 
            T.GameId AS Score_GameId, 
            T.Score1 AS Score_Score, 
            True AS _from0
        FROM GameConn.Score AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GameConn.Card
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GameConn.Card", @"
    SELECT VALUE -- Constructing Card
        [DataLayer.Card](T1.Card_CardId, T1.Card_Symbol, T1.Card_Letter, T1.Card_Worth, T1.Card_Image)
    FROM (
        SELECT 
            T.CardId AS Card_CardId, 
            T.Symbol AS Card_Symbol, 
            T.Letter AS Card_Letter, 
            T.Worth AS Card_Worth, 
            T.Image AS Card_Image, 
            True AS _from0
        FROM DataLayerStoreContainer.Card AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GameConn.Game
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GameConn.Game", @"
    SELECT VALUE -- Constructing Game
        [DataLayer.Game](T1.Game_GameId, T1.Game_Description, T1.Game_DateCreated)
    FROM (
        SELECT 
            T.GameId AS Game_GameId, 
            T.Description AS Game_Description, 
            T.DateCreated AS Game_DateCreated, 
            True AS _from0
        FROM DataLayerStoreContainer.Game AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GameConn.GameState
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GameConn.GameState", @"
    SELECT VALUE -- Constructing GameState
        [DataLayer.GameState](T1.GameState_PlayerId, T1.GameState_GameId, T1.GameState_CardId, T1.GameState_SequenceNumber)
    FROM (
        SELECT 
            T.PlayerId AS GameState_PlayerId, 
            T.GameId AS GameState_GameId, 
            T.CardId AS GameState_CardId, 
            T.SequenceNumber AS GameState_SequenceNumber, 
            True AS _from0
        FROM DataLayerStoreContainer.GameState AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GameConn.Player
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GameConn.Player", @"
    SELECT VALUE -- Constructing Player
        [DataLayer.Player](T1.Player_PlayerId, T1.Player_UserId, T1.Player_GameId)
    FROM (
        SELECT 
            T.PlayerId AS Player_PlayerId, 
            T.UserId AS Player_UserId, 
            T.GameId AS Player_GameId, 
            True AS _from0
        FROM DataLayerStoreContainer.Player AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GameConn.Registration
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GameConn.Registration", @"
    SELECT VALUE -- Constructing Registration
        [DataLayer.Registration](T1.Registration_UserId, T1.Registration_Username, T1.Registration_Password, T1.Registration_Firstname, T1.Registration_Lastname, T1.Registration_Age, T1.Registration_Email)
    FROM (
        SELECT 
            T.UserId AS Registration_UserId, 
            T.Username AS Registration_Username, 
            T.Password AS Registration_Password, 
            T.Firstname AS Registration_Firstname, 
            T.Lastname AS Registration_Lastname, 
            T.Age AS Registration_Age, 
            T.Email AS Registration_Email, 
            True AS _from0
        FROM DataLayerStoreContainer.Registration AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GameConn.Score
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GameConn.Score", @"
    SELECT VALUE -- Constructing Score
        [DataLayer.Score](T1.Score_PlayerId, T1.Score_GameId, T1.Score_Score1)
    FROM (
        SELECT 
            T.PlayerId AS Score_PlayerId, 
            T.GameId AS Score_GameId, 
            T.Score AS Score_Score1, 
            True AS _from0
        FROM DataLayerStoreContainer.Score AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DataLayerStoreContainer.TEST
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DataLayerStoreContainer.TEST", @"
    SELECT VALUE -- Constructing TEST
        [DataLayer.Store.TEST](T1.TEST_CardId, T1.TEST_Symbol, T1.TEST_Letter, T1.TEST_Worth, T1.TEST_Image)
    FROM (
        SELECT 
            T.CardId AS TEST_CardId, 
            T.Symbol AS TEST_Symbol, 
            T.Letter AS TEST_Letter, 
            T.Worth AS TEST_Worth, 
            T.Image AS TEST_Image, 
            True AS _from0
        FROM GameConn.TEST AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for GameConn.TEST
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("GameConn.TEST", @"
    SELECT VALUE -- Constructing TEST
        [DataLayer.TEST](T1.TEST_CardId, T1.TEST_Symbol, T1.TEST_Letter, T1.TEST_Worth, T1.TEST_Image)
    FROM (
        SELECT 
            T.CardId AS TEST_CardId, 
            T.Symbol AS TEST_Symbol, 
            T.Letter AS TEST_Letter, 
            T.Worth AS TEST_Worth, 
            T.Image AS TEST_Image, 
            True AS _from0
        FROM DataLayerStoreContainer.TEST AS T
    ) AS T1");
        }
    }
}
