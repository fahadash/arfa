

    <div id="tablesIAmOnGrid" >

    </div>
    <script>

        function getjoinabletables_fail(data, textStatus, jqXHR) {
            $("#tablesIAmOnGrid").html(textStatus + "data=" + JSON.stringify(data));
        }

        function getjoinabletables_success(data, textStatus, jqXHR) {

            if (data.result.errorcode != "SUCCESS") {
                if (data.result.errorcode == "INVALIDLOGINTOKEN") {
                    location.href = "/TCWeb/Account/Login";
                }
                $("#tablesIAmOnGrid").html(JSON.stringify(data));
            }
            else {
                $("#tablesIAmOnGrid").html("");
                $("#tablesIAmOnGrid").kendoGrid({
                    dataSource: {
                        data: data.response.tables,
                        schema: {
                            model: {
                                fields: {
                                    TableId: { type: "string" },
                                    TableName: { type: "string" },
                                    AvailableSlots: { type: "int" }
                                }
                            }
                        },
                        pageSize: 10
                    },
                    height: 250,
                    scrollable: true,
                    sortable: true,
                    filterable: true,
                    pageable: {
                        input: true,
                        numeric: false
                    },
                    columns: [
                        {
                            field: "TableId",
                            title: "Table Id",
                            width: 100,
                            hidden: true
                        },
                        {
                            field: "TableName",
                            title: "Table ",
                            width: 100
                        },
                        {
                            field: "AvailableSlots",
                            title: "Available Slots",
                            width: 10,
                            hidden: true
                        },

                        {
                            command: {
                                name: "open",
                                text: "Open",
                                click: function (e) {

                                    e.preventDefault();
                                    var path = this.dataItem($(e.currentTarget).closest("tr"));
                                    var tableId = path.TableId;

                                    var popupWindowName = "tableWindow_" + tableId;
                                   
                                    var htmlActionLink = '@Url.Action("Index", "Table", new {id = 0})';

                                    htmlActionLink = htmlActionLink.replace("0", tableId);

                                    var popupWindow = window.open(htmlActionLink, popupWindowName, "scrollbars=no,toolbar=no,systemmenu=no,statusbar=no,menubar=no", false);
                                    var popupWidth = 800, popupHeight = 600;
                                    var popupX = screen.width / 2 - popupWidth / 2;
                                    var popupY = screen.height / 2 - popupHeight / 2;
                                    popupWindow.resizeTo(popupWidth, popupHeight);
                                    popupWindow.moveTo(popupX, popupY);
                                    popupWindow.focus();
                                },
                                width: 50
                            },
                            width: 10
                        }
                    ]
                });
            }

        }

        function dumpProps(obj, parent) {
            // Go through all the properties of the passed-in object 
            for (var i in obj) {
                // if a parent (2nd parameter) was passed in, then use that to 
                // build the message. Message includes i (the object's property name) 
                // then the object's property value on a new line 
                if (parent) { var msg = parent + "." + i + "\n" + obj[i]; } else { var msg = i + "\n" + obj[i]; }
                // Display the message. If the user clicks "OK", then continue. If they 
                // click "CANCEL" then quit this level of recursion 
                if (!confirm(msg)) { return; }
                // If this property (i) is an object, then recursively process the object 
                if (typeof obj[i] == "object") {
                    if (parent) { dumpProps(obj[i], parent + "." + i); } else { dumpProps(obj[i], i); }
                }
            }
        }

        $(document).ready(function() {
        var params = {
            logintoken: $("#loginToken").val()
        };
        $.ajax({
            url: $("#tableServiceUrl").val() + "/ListTablesIAmOn/",
            type: "POST",
            data: JSON.stringify(params),
            contentType: "application/json;charset=utf-8",
            success: getjoinabletables_success,
            error: getjoinabletables_fail,
            OPTIONS: null,
        });
          
        });
    </script>
